#!/usr/bin/env python
import rospy
import os
import qrencode
import argparse
import tf2_ros

rospy.init_node('qr_code_generator')
tfBuffer = tf2_ros.Buffer()
listener = tf2_ros.TransformListener(tfBuffer)
rate = rospy.Rate(10.0)


def get_coordinates():
    while True:
        try:
            trans = tfBuffer.lookup_transform('map', 'base_link', rospy.Time())
        except (tf2_ros.LookupException, tf2_ros.ConnectivityException,
                tf2_ros.ExtrapolationException):
            rate.sleep()
            continue
        else:
            break
    return {'x': trans.transform.translation.x,
            'y': trans.transform.translation.y}


def host_correct(host):
    if host is "localhost":
        return True
    try:
        digits = host.split(".")
        assert len(digits) == 4
        for digit in digits:
            digit = int(digit)
            assert 0 <= digit < 256
        return True
    except (ValueError, AssertionError):
        return False

coors = get_coordinates()
parser = argparse.ArgumentParser(description='generate qr-code')
parser.add_argument('--host', metavar='h', type=str, default=["localhost"], nargs=1)
parser.add_argument('--port', metavar='p', type=int, default=[8080], nargs=1)
parser.add_argument('--filename', metavar='f', type=str, default=["qr_code.png"], nargs=1)
args = parser.parse_args()

if not host_correct(args.host[0]):
    rospy.logerr("host is not correct")

if os.path.isfile(args.filename[0]):
    rospy.logerr("File with exact name already exist")

link = "http://{}:{}/beverage?x={}&y={}".format(args.host[0], args.port[0],
                                                coors['x'], coors['y'])
qr = qrencode.encode_scaled(link, size=100)[2]
qr.save(args.filename[0])
rospy.logdebug(link)
rospy.loginfo('Done.')
